var Symbol = require('./_Symbol'),
    getRawTag = require('./_getRawTag'),
    objectToString = require('./_objectToString');

<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> acf7655... Upgraded clone, lodash and express.
/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;
<<<<<<< HEAD
=======
/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;
>>>>>>> 52e66d0... Updated lodash
=======
>>>>>>> acf7655... Upgraded clone, lodash and express.

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
<<<<<<< HEAD
  value = Object(value);
  return (symToStringTag && symToStringTag in value)
=======
  return (symToStringTag && symToStringTag in Object(value))
>>>>>>> acf7655... Upgraded clone, lodash and express.
    ? getRawTag(value)
    : objectToString(value);
}

module.exports = baseGetTag;
