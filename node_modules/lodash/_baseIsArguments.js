<<<<<<< HEAD
var baseGetTag = require('./_baseGetTag'),
    isObjectLike = require('./isObjectLike');
=======
var isObjectLike = require('./isObjectLike');
>>>>>>> c95cac6... Upgraded clone, lodash and is-my-json-valid.

/** `Object#toString` result references. */
var argsTag = '[object Arguments]';

<<<<<<< HEAD
=======
/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

>>>>>>> c95cac6... Upgraded clone, lodash and is-my-json-valid.
/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
<<<<<<< HEAD
  return isObjectLike(value) && baseGetTag(value) == argsTag;
=======
  return isObjectLike(value) && objectToString.call(value) == argsTag;
>>>>>>> c95cac6... Upgraded clone, lodash and is-my-json-valid.
}

module.exports = baseIsArguments;
