var Stack = require('./_Stack'),
    assignMergeValue = require('./_assignMergeValue'),
<<<<<<< HEAD
<<<<<<< HEAD
    baseFor = require('./_baseFor'),
=======
    baseKeysIn = require('./_baseKeysIn'),
>>>>>>> 52e66d0... Updated lodash
    baseMergeDeep = require('./_baseMergeDeep'),
    isObject = require('./isObject'),
<<<<<<< HEAD
=======
    baseFor = require('./_baseFor'),
    baseMergeDeep = require('./_baseMergeDeep'),
    isObject = require('./isObject'),
>>>>>>> c95cac6... Upgraded clone, lodash and is-my-json-valid.
    keysIn = require('./keysIn');
=======
    isTypedArray = require('./isTypedArray');
>>>>>>> 52e66d0... Updated lodash

/**
 * The base implementation of `_.merge` without support for multiple sources.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} [customizer] The function to customize merged values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMerge(object, source, srcIndex, customizer, stack) {
  if (object === source) {
    return;
  }
<<<<<<< HEAD
<<<<<<< HEAD
  baseFor(source, function(srcValue, key) {
=======
  if (!(isArray(source) || isTypedArray(source))) {
    var props = baseKeysIn(source);
  }
  arrayEach(props || source, function(srcValue, key) {
    if (props) {
      key = srcValue;
      srcValue = source[key];
    }
>>>>>>> 52e66d0... Updated lodash
=======
  baseFor(source, function(srcValue, key) {
>>>>>>> c95cac6... Upgraded clone, lodash and is-my-json-valid.
    if (isObject(srcValue)) {
      stack || (stack = new Stack);
      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
    }
    else {
      var newValue = customizer
        ? customizer(object[key], srcValue, (key + ''), object, source, stack)
        : undefined;

      if (newValue === undefined) {
        newValue = srcValue;
      }
      assignMergeValue(object, key, newValue);
    }
  }, keysIn);
}

module.exports = baseMerge;
